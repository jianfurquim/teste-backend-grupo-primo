// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(uuid())
  name     String?
  email    String    @unique
  password String
  accounts Account[]

  @@map("users")
}

model Account {
  id           String        @id @default(uuid())
  balance      Float         @default(0)
  userId       String
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@map("accounts")
}

model Transaction {
  id              String          @id @default(uuid())
  amount          Float
  createdAt       DateTime        @default(now())
  accountId       String
  account         Account         @relation(fields: [accountId], references: [id])
  transactionType TransactionType
  Income          Income[]
  Expense         Expense[]

  @@map("transactions")
}

enum TransactionType {
  INCOME
  EXPENSE
  TRANSFER
}

model Income {
  id            String      @id @default(uuid())
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transfer      Transfer?   @relation("IncomeToTransfer")

  @@map("incomes")
}

model Expense {
  id            String      @id @default(uuid())
  transactionId String
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transfer      Transfer?   @relation("ExpenseToTransfer")

  @@map("expenses")
}

model Transfer {
  id      String  @id @default(uuid())
  fromId  String  @unique
  toId    String  @unique
  income  Income  @relation("IncomeToTransfer", fields: [fromId], references: [id])
  expense Expense @relation("ExpenseToTransfer", fields: [toId], references: [id])

  @@map("transfers")
}
